---
# This is a basic workflow to build and publish Docker images
name: "Docker CI/CD"

# Controls when the workflow will run
on:
  # Triggers the workflow on push events but only for the master branch
  push:
    branches: [master, main]
    paths:
      - "Docker/**"
    # Publish semver tags as releases.
    tags: ['v*.*.*']

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Ensures only 1 workflow is running
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  # Name of the app
  APP: reactjs

# Permissions needed to run the workflow (top level)
permissions:
  contents: read
  
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # Buils the Docker image
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    # This is used to complete the identity challenge
    permissions:
      contents: read
      packages: write
    # Setup defaults for the steps within a job
    defaults:
      run:
        working-directory: ./Docker

    # Setup matrix for OS and Python
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Harden runner
      - name: Harden Runner
        uses: step-security/harden-runner@18bf8ad2ca49c14cbb28b91346d626ccfb00c518 # v2.1.0
        with:
          egress-policy: audit

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c #v3.3.0
  
      # Log in to the Container registry
      - name: Log in to the Container registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a #v2.1.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@507c2f2dc502c992ad446e3d7a5dfbe311567a96 #v4.3.0
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
      
      #Build en publish docker image
      - name: Build and push
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671 #v4.0.0
        with:
          context: ./Docker/${{ env.APP }}
          file: ./Docker/${{ env.APP }}/Dockerfile
          push: false
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  # Publish Docker image
  publish:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}
    # Define dependency's between jobs
    needs: build
    # Setup defaults for the steps within a job
    defaults:
      run:
        working-directory: ./Docker
    # Setup env variables for the job
    environment:
      name: render
      url: "https://${{ env.APP }}example.onrender.com"

    # Setup matrix for OS and Python
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.11"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c #v3.3.0
    
      # Call API to start redeploy
      - name: Redeploy
        uses: distributhor/workflow-webhook@6684d6301159d8c6e1c6527f78d4db9b5d8e5fed #v3.0.2
        env:
          webhook_url: ${{ secrets.RENDER_URL }}
          webhook_secret: "fP"
