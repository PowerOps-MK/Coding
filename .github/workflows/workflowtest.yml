# This is a basic workflow to help you get started with Actions

name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Set environment variables
env:
  script_path: Python/Spotify

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Set versions to use
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.10"]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Install Python      
      - uses: actions/setup-python@v2
        with:
          python-version: "${{ matrix.python-version }}"
  
      # Checks Python version
      - name: Validate version
        run: |
          python_version=$(python --version)
          echo "Required version is ${{ matrix.python-version }}" 
          echo "Installed version is" $python_version
        shell: bash

      # Install Python dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install -r ${{ github.workspace }}/${{ env.script_path }}/requirements.txt

      # Run Python script
      - name: Run script
        run: |
          python ${{ github.workspace }}/${{ env.script_path }}

      # Lint the Python script
      - name: Lint with flake8
        run: |        
          # stop the build if there are Python syntax errors or undefined names
          flake8 ${{ github.workspace }}/${{ env.script_path }} --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 ${{ github.workspace }}/${{ env.script_path }} --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics > output.txt

      # Upload output artifact
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: output-${{ runner.os }} 
          path: output.txt

      # Test the script artifact
      #- name: Test with pytest
        #run: |
          #pytest 
      
